name: Version Bump

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  bump-version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Determine version bump type
        id: version-type
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "PR Title: $PR_TITLE"
          
          # Check for breaking changes
          if echo "$PR_TITLE" | grep -qE "^[a-z]+(\([a-z]+\))?!:" || \
             echo "$PR_TITLE" | grep -qi "BREAKING CHANGE"; then
            echo "bump_type=major" >> $GITHUB_OUTPUT
            echo "Detected BREAKING CHANGE - will bump major version"
          # Check for features
          elif echo "$PR_TITLE" | grep -qE "^feat(\([a-z]+\))?:"; then
            echo "bump_type=minor" >> $GITHUB_OUTPUT
            echo "Detected feature - will bump minor version"
          # Check for fixes and other changes
          elif echo "$PR_TITLE" | grep -qE "^(fix|perf|refactor|build|chore)(\([a-z]+\))?:"; then
            echo "bump_type=patch" >> $GITHUB_OUTPUT
            echo "Detected fix/patch - will bump patch version"
          # Skip for docs, style, test, ci changes
          elif echo "$PR_TITLE" | grep -qE "^(docs|style|test|ci|revert)(\([a-z]+\))?:"; then
            echo "bump_type=skip" >> $GITHUB_OUTPUT
            echo "No version bump needed for documentation/style/test/ci changes"
          else
            echo "bump_type=skip" >> $GITHUB_OUTPUT
            echo "No semantic commit prefix found - skipping version bump"
          fi
      
      - name: Install dependencies
        if: steps.version-type.outputs.bump_type != 'skip'
        run: npm ci
      
      - name: Bump version
        if: steps.version-type.outputs.bump_type != 'skip'
        run: |
          BUMP_TYPE="${{ steps.version-type.outputs.bump_type }}"
          echo "Bumping $BUMP_TYPE version..."
          npm version $BUMP_TYPE -m "chore: bump version to %s [skip ci]"
          
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          
          git push origin main
          git push origin --tags
